## Git Configuration & Setup
-> git config –global user.name “Your Name”
-> git config –global user.email “youremail@example.com”	
-> git config –global color.ui auto –
-> git status		// For status show

## Initializing a Repository  
-> git init		                // Initializes a new Git repository in the current directory.
-> git init <directory>         // Creates a new Git repository in the specified directory.
-> git clone <repository_url>	// this Clones a repository from a remote server to your local machine. 

## Basic Git Commands
-> git add <file>
-> git add . 		    // For add all file	or 
-> git add –all		    // For add all file
-> git status		    // For status show
-> git status –ignored	// Displays ignored files in addition to the regular status output.
-> git diff		        // Shows the changes between the working directory and the staging area (index).
-> git diff <commit1> <commit2>	// Displays the differences between two commits.
-> git diff HEAD	            // Display the difference between the current directory and the last commit
-> git commit -m “<message>”    // Creates a new commit with the changes in the staging area and specifies the commit message inline.
-> git commit -a or git commit –all // Commits all modified and deleted files in the repository without explicitly using git add to stage the changes.
-> git restore <file>	// Restores the file in the working directory to its state in the last commit.
-> git reset <commit>	// Moves the branch pointer to a specified commit, resetting the staging area and the working directory to match the specified commit.
-> git reset –soft <commit>	// Moves the branch pointer to a specified commit, preserving the changes in the staging area and the working directory.
-> git reset –hard <commit>	// Moves the branch pointer to a specified commit, discarding all changes in the staging area and the working directory, effectively resetting the repository to the specified commit.

## Branching and Merging
-> git branch			                // Lists all branches in the repository.
-> git branch <branch-name>	            // Creates a new branch with the specified name.
-> git branch -d <branch-name>	        // Deletes the specified branch.
-> git checkout <branch-name>	        // Switches to the specified branch.
-> git checkout -b <new-branch-name>	// Creates a new branch and switches to it.
-> git merge <branch>	                // Merges the specified branch into the current branch.
-> git log			                    // Displays the commit history of the current branch.
-> git log –all			                // Displays the commit history of all branches
-> git log --oneline                    // Display the commit in summery

## Remote Repositories
-> git fetch			// Retrieves change from a remote repository, including new branches and commit.
-> git fetch –prune		// Removes any remote-tracking branches that no longer exist on the remote repository.
-> git pull			    // Fetches changes from the remote repository and merges them into the current branch.
-> git push			    // Pushes local commits to the remote repository.
-> git push –all		// Pushes all branches to the remote repository.
-> git remote			// Lists all remote repositories.